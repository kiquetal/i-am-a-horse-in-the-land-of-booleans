(use 'i-am-a-horese-in-the-land-of-booleans')
(use 'i-am-a-horese-in-the-land-of-booleans)
(use 'i-am-a-horse-in-the-land-of-booleans)
ls
exit
(defn bol [x] (if (x? false) (false) (true)))
(defn bol [x] (if (x false) (false) (true)))
(bol false)
(bol (false))
(defn algo [x](str x "ssa"))
(algo (12))
(algo ("12"))
(algo ["12"])
(algo "12")
(defn bol [x] (if (x false) (false) (true)))
(bol false)
(defn bol [x] (if (x false) ("false") ("true")))
(bol false)
(defn bol [x] (if (x? false) ("false") ("true")))
(if "foo" "truue" "fals")
(defn bol [x] (if (x false) ("false") ("true")))
(bol false)
(defn bol [x] (if x false "false" "true"))
(defn bol [x] (if (x false) "false" "true"))
(bol false)
(bol "a")
(defn bol [x] (if x false "false" "true"))
(defn bol [x] (if x "true" "false"))
(bol false)
(defn bol [x] (if x "true" "false"))
(defn bol [x] ((if x [] "false" "true") (if x "true" "false") ))
(defn bol [x] ((if x? [] "false" "true") (if x "true" "false") ))
(if "foo" "kiquetal" "false")
(if "foo"?"kiquetal" "oe")
(if "foo"?"kiquetal" "oe" "asd")
(boolean [])
(defn bol [x] ((if x "true" "false")))
(bol false)
(defn bol [x] (if x "true" "false"))
(bol "as")
(bol false)
(bol true)
exit
(defn teen? [x] (if (>= x 13) if (<= 19 x) true false false))
(defn teen? [x] (if (>= x 13) true false))
(teen? 16)
(defn teen? [x] (if (>= x 13) (if <= 19 x ) true false))
(defn teen? [x] (if (>= x 13) (if <= 19 x ) true false false))
(defn teen? [x] (if (>= x 13) (if <= 19 x  true false false))
(defn teen? [x] (if (>= x 13) (if <= 19 x  true false false)))
(defn teen? [x] (if (>= x 13) if (<= 19 x)  true false false)))
(defn teen? [x] (if (>= x 13) (if (<= 19 x)  true false) false)))
(defn teen? [x] (if (>= x 13) (if (<= 19 x)  true false) false))
(teen? 19)
(teen? 20)
(teen? 23)
(defn teen? [x] (if (>= x 13) (if (<= x 19)  true false) false))
(teen? 23)
(teen? 19)
(teen? 18)
(defn teen? [x] (if (>= x 13) (if (<= x 19)  true false) false))
exit
